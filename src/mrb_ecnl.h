/*
 *  TOPPERS ECHONET Lite Communication Middleware
 * 
 *  Copyright (C) 2016 Cores Co., Ltd. Japan
 * 
 *  上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
 *  ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
 *  変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 *  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
 *      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
 *      スコード中に含まれていること．
 *  (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
 *      用できる形で再配布する場合には，再配布に伴うドキュメント（利用
 *      者マニュアルなど）に，上記の著作権表示，この利用条件および下記
 *      の無保証規定を掲載すること．
 *  (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
 *      用できない形で再配布する場合には，次のいずれかの条件を満たすこ
 *      と．
 *    (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
 *        作権表示，この利用条件および下記の無保証規定を掲載すること．
 *    (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
 *        報告すること．
 *  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
 *      害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
 *      また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
 *      由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
 *      免責すること．
 * 
 *  本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 *  よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
 *  に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
 *  アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
 *  の責任を負わない．
 * 
 */

#ifndef MRB_ECNL_H
#define MRB_ECNL_H

#include <stddef.h>
#include <stdint.h>
#include <mruby.h>
#include "echonet.h"

extern struct RClass *_module_ecnl;
extern struct RClass *_class_object;
extern struct RClass *_class_node;
extern struct RClass *_class_property;
extern struct RClass *_class_data;
extern struct RClass *_class_iterator;
extern struct RClass *_class_svctask;

typedef struct mrb_ecnl_eproperty_type
{
	EPRPINIB inib;
	mrb_sym exinf;
	mrb_sym eprpset;
	mrb_sym eprpget;
	mrb_value eobj;
	bool_t anno;
}T_MRB_ECNL_EPROPERTY;

typedef struct mrb_ecnl_eiterator_type
{
	T_ENUM_EPC itr;
	uint8_t epc, pdc;
	uint8_t edt[256];
	uint8_t state : 7;
	uint8_t is_eof : 1;
}T_MRB_ECNL_EITERATOR;

mrb_value mrb_ecnl_edata_new(mrb_state *mrb, T_EDATA *data);

bool_t lcl_is_local_addr(ecnl_svc_task_t *svc, mrb_value ep);
bool_t lcl_is_multicast_addr(ecnl_svc_task_t *svc, mrb_value ep);
bool_t lcl_equals_addr(ecnl_svc_task_t *svc, mrb_value ep1, mrb_value ep2);
mrb_value lcl_get_local_addr(ecnl_svc_task_t *svc);
mrb_value lcl_get_multicast_addr(ecnl_svc_task_t *svc);
bool_t lcl_is_match(ecnl_svc_task_t *svc, struct ecn_node *enodcb, T_EDATA *edata, mrb_value ep);
ER lcl_snd_msg(ecnl_svc_task_t *svc, mrb_value ep, mrb_value msg);

void mrb_mruby_ecnl_gem_init(mrb_state *mrb);
void mrb_mruby_ecnl_gem_final(mrb_state *mrb);

#endif /* MRB_ECNL_H */
